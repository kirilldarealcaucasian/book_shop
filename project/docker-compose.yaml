version: '3.9'

services:
  web:
    container_name:
      shop_application

    build:
      context: ../ecommerce
      dockerfile: Dockerfile

    command: bash -c "uvicorn application.cmd:app --reload --host 0.0.0.0 --port 8000"

    environment:
      - MODE=TEST
      - LOG_LEVEL=INFO

      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SERVER=db
      - DB_PORT=5432
      - DB_NAME=proj_db

      - TEST_POSTGRES_USER=postgres
      - TEST_POSTGRES_PASSWORD=postgres
      - TEST_POSTGRES_SERVER=db
      - TEST_POSTGRES_PORT=5432
      - TEST_POSTGRES_DB=proj_db_test

      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=465
      - SMTP_USER=richi.mosberg@gmail.com
      - SMTP_PASS=wigfzahnhuzdfwge

      - REDIS_HOST=redis
      - REDIS_PORT=6379

      - RABBIT_USER=rmuser
      - RABBIT_PASSWORD=rmpassword
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672

    volumes:
      - shared_volume:/project/ecommerce/application/static/images

    ports:
      - "8000:8000"

    depends_on:
      - db
      - celery

  db:
    container_name:
      postgres_database

    image: postgres:15

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=proj_db_test

    ports:
      - "5432:5432"

  migrator:
   build:
     context: ../ecommerce

   deploy:
     restart_policy:
       condition: on-failure
       max_attempts: 7

   command: bash -c "alembic upgrade head"

   depends_on:
     - web

  redis:
   container_name:
     redis_container

   image: redis:7

   ports:
     - "6379:6379"

  celery:
   container_name:
     celery_container

   build:
     context: ../ecommerce

   restart: on-failure

   environment:
     - REDIS_HOST=redis
     - REDIS_PORT=6379

   volumes:
     - shared_volume:/project/ecommerce/application/static/images

   depends_on:
     - redis

   command: bash -c "celery -A infrastructure.celery.app:celery worker -l INFO --pool=solo --beat"

  logs-service:
    build:
      context: ../logsStorage
    ports:
      - "8083:8083"
    environment:
      CONFIG_PATH: "/app/config/config.yaml"
      RABBIT_USER: rmuser
      RABBIT_PASSWORD: rmpassword
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
    restart: on-failure
    depends_on:
      - rabbitmq
      - web


  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: user
    command: mongod --auth --bind_ip_all
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    ports:
      - 8085:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://user:user@mongo:27017
      ME_CONFIG_BASICAUTH: true

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    ports:
      - 15672:15672
      - 5672:5672


volumes:
  shared_volume:
